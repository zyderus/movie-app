{"version":3,"sources":["01_startup.js","02_utilities.js","03_global.js","04_listeners.js","05_instructions.js","06_navbar.js","07_megamenu.js","08_body.js","09_marquee.js","10_forms.js","11_regvalidate.js","12_pwmeter.js","13_profile.js","14_gmap.js"],"names":["console","log","userTheme","getCookie","currentTheme","document","documentElement","getAttribute","toggleSwitch","querySelector","supportedLangs","locale","getLocale","language","cacheInterval","coordinates","cname","name","ca","cookie","split","i","length","c","charAt","substring","indexOf","langArray","lang","navigator","languages","timeFormat","ms","h","getHours","toString","m","getMinutes","checkTime","parseInt","conditionTheme","sunrise","sunset","now","Date","dayTheme","nightTheme","setAttribute","checked","goBack","window","history","back","writeToCache","url","data","localStorage","setItem","JSON","stringify","readFromCache","parse","getItem","fetchFresh","async","res","fetch","valid","ok","Error","statusText","json","time","err","fetchData","interval","cache","cacheData","fetchMovie","url_movieInfo","movieId","url_params","watchMovie","getGeoip","getLocation","Promise","rej","geolocation","getCurrentPosition","getCoords","permission","permissions","query","state","location","latitude","parseFloat","coords","toFixed","longitude","getWeather","lat","lon","getSunTimes","geoip","weather","suntimes","sys","message","clearPage","header","innerHTML","sections","forEach","section","hasAttribute","getClassByRate","rate","class","star","sessionIpData","sessionStorage","ipObj","addtoIpHistory","obj","Array","prototype","pushMax","value","max","this","shift","push","entries","showMovieListGenres","genres","list","movieGenres","genresarr","map","genre","item","id","join","showMovieGenres","URLSearchParams","img_path","img_path_highres","url_movie_genres","url_search","url_theatersNow","url_theatersUpcoming","url_moviesTrend","url_moviesPopular","url_similars","marqueeReel","gallery","galleryThumbnails","searchResults","querySelectorAll","searchContainerMain","searchForm","searchInput","elem","addEventListener","switchTheme","menu","e","stopPropagation","preventDefault","searchValue","then","results","toSection","autoTheme","setTheme","style","transition","target","setInterval","authModal","show","registerTab","loginTab","pathname","href","langSelectors","authBtn","bootstrap","Modal","getElementById","Tab","regbutton","loginbutton","reglink","loginlink","hideBtns","toggleShow","element","previousElementSibling","type","children","display","btn","themeCheckbox","body","classList","toggle","langCookieAge","option","reload","showMegamenuMovie","movie","movieCol","main","title","poster_path","vote_average","overview","release_date","genre_ids","movieElement","createElement","add","getFullYear","getGenres","appendChild","secTheaters","secTheatersPick","secMovies","secMoviesPick","secTv","initData","showGenres","showMoviesTrending","showInTheaters","showMoviesPopular","toGenresList","moviesIntheaters","picked","pickShow","toTheaterPicked","movies","similars","getSimilarShows","toSimilars","toMoviePicked","shows","Math","floor","random","slice","moviesTrending","toCarousel","array","index","backdrop_path","filmSlide","className","backgroundImage","button","filmElement","infiniteMarquee","showMap","setTimeout","initMap","scrollTo","iframeContainer","trailer","params","q","videoId","items","genreElement","append","root","marqueeElementsDisplayed","getComputedStyle","getPropertyValue","marqueeContent","setProperty","cloneNode","contactForm","email","method","headers","Content-type","opacity","regform","regemail","regpassword","regcaptcha","emailsmall","emailerr","captchasmall","loginForm","loginemail","loginCaptcha","loginBtn","loginEmailsmall","loginCaptchasmall","registrationErrors","emailbackend","password","recaptcha","loginErrors","setErrorFor","input","formControl","parentElement","innerText","setSuccessFor","isEmail","test","checkEmail","toLowerCase","Content-Type","allFalse","validateEmail","emailValue","validatePassword","passValue","validateCaptcha","recaptchaCheck","recaptchaCheckExp","calPasswordStrength","pass","score","letters","Object","variations","digits","lower","upper","nonWords","check","variationCount","form","loader","disabled","pointerEvents","msg","meters","passwordScore","backgroundColor","color","url_weatherInfo","clientInfo","profileInit","ipdata","showWeather","showClientside","units","toWeather","toClientInfo","city","temp","icon","desc","description","weatherElement","spans","ip","country_name","time_zone","marker","activeInfoWindow","myLatLng","directionsService","directionsRenderer","lng","styles","night","retro","iconUrl","theaters","google","maps","DirectionsService","DirectionsRenderer","Map","center","zoom","disableDefaultUI","setMap","Marker","position","animation","Animation","DROP","scaledSize","Size","addListener","toggleBounce","theater","addMarker","event","addDomListener","setOptions","getAnimation","setAnimation","BOUNCE","place","geometry","contentString","vicinity","rating","user_ratings_total","infowindow","InfoWindow","content","calculateAndDisplayRoute","close","open","endCoords","route","origin","destination","avoidTolls","avoidHighways","travelMode","TravelMode","DRIVING","response","status","setDirections","alert","default","elementType","stylers","featureType","hiding","visibility"],"mappings":"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","file":"main.min.js","sourcesContent":["console.log('startup.js');\r\n\r\nconst userTheme = getCookie('theme') || null;\r\n\r\nlet currentTheme = document.documentElement.getAttribute('data-theme');\r\nconsole.log('theme', currentTheme);\r\n\r\n\r\nconst toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\n// Set Global frontend language locale\r\nconst supportedLangs = ['en', 'ru', 'es']; // List of site supported languages\r\nlet locale = getLocale(supportedLangs);\r\nconst language = locale; // TMDB API locale for fetch\r\n\r\n// Default caching interval\r\nconst cacheInterval = 1000 * 60 * 60;\r\n\r\n// Geo coordinates\r\nlet coordinates;\r\n\r\n\r\n\r\n\r\n// // Monitor for DOM changes\r\n// let mutationObserver = new MutationObserver((mutations) => {\r\n//   mutations.forEach((mutation) => {\r\n//     console.log(mutation);\r\n//   })\r\n// })\r\n\r\n// // Starts listening for changes in the root HTML element of the page.\r\n// mutationObserver.observe(document.documentElement, {\r\n//   attributes: true,\r\n// });","console.log('utilities.js');\r\n\r\n// Parse and get cookie data by keyname\r\nfunction getCookie(cname) {\r\n  const name = cname + '=';\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\n// Evaluate preferred language\r\nfunction getLocale(langArray) {\r\n  let lang;\r\n  if (!getCookie('language')) {\r\n    lang = navigator.languages[0].substring(0, 2);\r\n  } else {\r\n    const index = langArray.indexOf(getCookie('language'));\r\n    lang = index >= 0 ? getCookie('language') : 'en'; // default to english\r\n  }\r\n  return lang;\r\n}\r\n\r\n// Format Date object to hrs mins integer (military format like)\r\nconst timeFormat = ms => {\r\n  let h = ms.getHours().toString();\r\n  let m = ms.getMinutes().toString();\r\n  h = checkTime(h);\r\n  m = checkTime(m);\r\n  return parseInt(h + m);\r\n\r\n  // Add leading 0s\r\n  function checkTime(i) {\r\n    return i < 10 ? (i = '0' + i) : i;\r\n  }\r\n};\r\n\r\n// Set theme depending on sun position\r\nconst conditionTheme = (sunrise, sunset) => {\r\n  const now = timeFormat(new Date());\r\n  const isDay = now > sunrise && now < sunset;\r\n  isDay ? dayTheme() : nightTheme();\r\n};\r\n\r\n// set Day Theme\r\nconst dayTheme = () => {\r\n  document.documentElement.setAttribute('data-theme', 'light');\r\n  toggleSwitch.checked = false;\r\n  currentTheme = 'light';\r\n};\r\n\r\n// set Night Theme\r\nconst nightTheme = () => {\r\n  document.documentElement.setAttribute('data-theme', 'dark');\r\n  toggleSwitch.checked = true;\r\n  currentTheme = 'dark';\r\n};\r\n\r\n// Go back in browser history\r\nconst goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// Read and Write data to local storage\r\nconst writeToCache = (url, data) => localStorage.setItem(url, JSON.stringify(data));\r\nconst readFromCache = url => JSON.parse(localStorage.getItem(url)) || null;\r\n\r\n// Fetch new data\r\nconst fetchFresh = async url => {\r\n  try {\r\n    const res = await fetch(url);\r\n    const valid = res.ok ? res : new Error(res.statusText);\r\n    const data = await valid.json();\r\n    data.time = Date.now();\r\n    return data;\r\n  } catch (err) {\r\n    console.log('error:', err);\r\n  }\r\n};\r\n\r\n// Fetch Fresh or Cached Data\r\nconst fetchData = async (url, interval = cacheInterval, cache = true) => {\r\n  const cacheData = readFromCache(url);\r\n  if (cacheData && cacheData.time > Date.now() - interval) {\r\n    return cacheData;\r\n  } else {\r\n    const data = await fetchFresh(url);\r\n    // Cache data if cache option set to true and there is data\r\n    if (cache && data) {\r\n      writeToCache(url, data);\r\n    }\r\n    // If unable to fetch data from API then use cache data\r\n    return data ? data : cacheData;\r\n  }\r\n};\r\n\r\n// Fetch movie details by Id\r\nconst fetchMovie = async movieId => {\r\n  const url = `${url_movieInfo + movieId}?${url_params}`;\r\n  const data = await fetchData(url);\r\n  watchMovie(data);\r\n};\r\n\r\n// Receive coordinates via GeoIP service\r\nconst getGeoip = () => {\r\n  const url = 'https://freegeoip.app/json/'; // 15 000 requests per hour\r\n  const cacheInterval = 1000 * 60 * 30; // 30 minutes\r\n  return fetchData(url, cacheInterval);\r\n};\r\n\r\n// Receive coordinates via Browser's geolocation\r\nconst getLocation = async () => {\r\n  return new Promise((res, rej) => {\r\n    navigator.geolocation.getCurrentPosition(res, rej);\r\n  });\r\n};\r\n\r\n// Get latitude and longitude\r\nconst getCoords = async () => {\r\n  const permission = await navigator.permissions.query({ name: 'geolocation' });\r\n  if (navigator.geolocation && permission.state == 'granted') {\r\n    console.log('from navigator.geolocation...');\r\n    try {\r\n      const location = await getLocation();\r\n      return {\r\n        latitude: parseFloat(location.coords.latitude.toFixed(4)),\r\n        longitude: parseFloat(location.coords.longitude.toFixed(4)),\r\n      };\r\n    } catch (err) {\r\n      console.log('ERRORS...', err);\r\n      return getGeoip();\r\n    }\r\n  } else {\r\n    console.log('from geoIP...');\r\n    return getGeoip();\r\n  }\r\n};\r\n\r\n// Collect local Weather data based on latitude and longitude from GeoIP data\r\nconst getWeather = async data => {\r\n  const coords = { lat: data.latitude, lon: data.longitude };\r\n  // save coordinates in variable\r\n  coordinates = coords;\r\n  const key = '73ccfb39651ee95f5ba9a7a7ae60941a';\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&units=metric&lang=ru&appid=${key}`;\r\n  return await fetchData(url);\r\n};\r\n\r\n// Get sunrise and sunset times based on weather data\r\nconst getSunTimes = async () => {\r\n  try {\r\n    const geoip = await getCoords();\r\n    const weather = await getWeather(geoip);\r\n    const suntimes = {\r\n      sunrise: timeFormat(new Date(weather.sys.sunrise * 1000)),\r\n      sunset: timeFormat(new Date(weather.sys.sunset * 1000)),\r\n    };\r\n    document.cookie = 'suntimes=' + JSON.stringify(suntimes) + '; Max-Age=' + 60 * 60 * 24;\r\n    return suntimes;\r\n  } catch (err) {\r\n    console.log('new ERRORs...', err.message);\r\n  }\r\n};\r\n\r\n// Clear page of data\r\nconst clearPage = () => {\r\n  header.innerHTML = '';\r\n  sections.forEach(section => {\r\n\r\n    // avoid layout sections that don't have class attribute\r\n    if(section.hasAttribute('class')) {\r\n      section.innerHTML = '';\r\n    }\r\n  });\r\n};\r\n\r\n// Evaluate movie rating scores\r\nconst getClassByRate = rate => {\r\n  if (rate == 0) {\r\n    return {\r\n      class: 'hide',\r\n    };\r\n  } else if (rate >= 7) {\r\n    return {\r\n      class: 'green',\r\n      star: 'fas fa-star',\r\n    };\r\n  } else if (rate > 5) {\r\n    return {\r\n      class: 'orange',\r\n      star: 'fas fa-star-half',\r\n    };\r\n  } else {\r\n    return {\r\n      class: 'red',\r\n      star: 'far fa-star',\r\n    };\r\n  }\r\n};\r\n\r\n// Track IP lookup\r\nconst sessionIpData = async url => {\r\n  const sessionIpObj = sessionStorage.getItem(url) || null;\r\n  // if no url-named item in current SESSION then create one\r\n  if (!sessionIpObj) {\r\n    const ipObj = await fetchFresh(url);\r\n    sessionStorage.setItem(url, JSON.stringify(ipObj));\r\n    addtoIpHistory(ipObj);\r\n    return ipObj;\r\n  } else {\r\n    const ipData = JSON.parse(sessionStorage.getItem(url)) || null;\r\n    return ipData;\r\n  }\r\n};\r\n\r\n// Add locale object to localstorage history array\r\nfunction addtoIpHistory(obj) {\r\n  // If max items then push to last and delete first\r\n  Array.prototype.pushMax = function (value, max) {\r\n    if (this.length >= max) {\r\n      this.shift();\r\n    }\r\n    this.push(value);\r\n  };\r\n\r\n  const entries = JSON.parse(localStorage.getItem('ipHistory')) || [];\r\n  entries.pushMax(obj, 10);\r\n  localStorage.setItem('ipHistory', JSON.stringify(entries));\r\n}\r\n\r\n// Loop genres for Movie list\r\nconst showMovieListGenres = genres => {\r\n  const genresArr = movieGenres;\r\n  const list = movieGenres.genres;\r\n  let genresarr = [];\r\n  genres.map(genre => {\r\n    list.map(item => {\r\n      if (genre == item.id) {\r\n        genresarr.push(item.name);\r\n      }\r\n    });\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n\r\n// Loop genres for a movie\r\nconst showMovieGenres = genres => {\r\n  const list = genres;\r\n  let genresarr = [];\r\n  list.map(item => {\r\n    genresarr.push(item.name);\r\n  });\r\n  return genresarr.join(', ');\r\n};","console.log('connected 1_global.js');\r\n\r\n// TMDb API parameters\r\nconst url_params = new URLSearchParams({ language });\r\nconst img_path = 'https://image.tmdb.org/t/p/w300';\r\nconst img_path_highres = 'https://image.tmdb.org/t/p/w1280';\r\n\r\n// TMDB data proxies\r\nconst url_movie_genres = '/api/movies/genres?';\r\nconst url_search = '/api/movies/search?query=';\r\nconst url_theatersNow = '/api/theaters/nowplaying?';\r\nconst url_theatersUpcoming = '/api/theaters/upcoming?';\r\nconst url_moviesTrend = '/api/movies/trending?';\r\nconst url_moviesPopular = '/api/movies/popular?';\r\nconst url_movieInfo = '/api/movies/movieinfo/';\r\nconst url_similars = '/api/similar/';\r\n\r\nconst marqueeReel = document.querySelector('.marquee-content');\r\nconst gallery = document.querySelector('.carousel-inner');\r\nconst galleryThumbnails = document.querySelector('.carousel-indicators');\r\nconst searchResults = document.querySelectorAll('search-results');\r\nconst sections = document.querySelectorAll('section');\r\nconst header = document.querySelector('header');\r\n\r\n// Search form\r\nconst searchContainerMain = document.querySelector('#search-container-main');\r\nconst searchForm = document.querySelector('.search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\nconst elem = document.querySelector('elem');    // collection of translations from backend via data-... property\r\n\r\nlet movieGenres;\r\n\r\n// Clean up Local Storage of old data on second reload of same session\r\n// add flag if there is current session ip data\r\n// if there is flag clean up local storage of data older than 1 month\r\n\r\n/* OPEN DROPDOWNS ON HOVER */\r\n// // Vars\r\n// const dropdowns = document.querySelectorAll('nav .dropdown');\r\n// const dropdownMenus = document.querySelectorAll('nav .dropdown-menu');\r\n\r\n// // Open dropdown menu on hover\r\n// dropdowns.forEach(dropdown => {\r\n//   const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n//   dropdown.addEventListener('mouseover', () => {\r\n//     removeClass(dropdownMenus);\r\n//     if(window.getComputedStyle(dropdownMenu).visibility === \"visible\") {\r\n//       dropdownMenu.classList.add(\"show\");\r\n//     // }\r\n//   });\r\n// });\r\n","console.log('listeners.js');\r\n\r\n// Toggle day and night themes\r\ntoggleSwitch.addEventListener('change', switchTheme, false);\r\n\r\n// Prevent closing on click inside dropdown\r\ndocument.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n  menu.addEventListener('click', e => {\r\n    e.stopPropagation();\r\n  });\r\n});\r\n\r\n// Search movies (no caching)\r\nsearchForm.addEventListener('submit', async e => {\r\n  e.preventDefault();\r\n  const searchValue = searchInput.value;\r\n  const url = url_search + searchValue + '&' + url_params;\r\n\r\n  if (searchValue) {\r\n    clearPage();\r\n\r\n    const data = await fetchData(url).then(res => res.results);\r\n    const searchSection = document.querySelector('.search-results');\r\n    toSection(searchSection, data);\r\n    searchInput.value = '';\r\n  }\r\n});\r\n","console.log('instructions.js');\r\n\r\n// Set Theme according to sunrise and sunset times\r\nconst autoTheme = async () => {\r\n  const suntimes = await getSunTimes();\r\n  conditionTheme(suntimes.sunrise, suntimes.sunset);\r\n};\r\n\r\n// Set Theme\r\nconst setTheme = (() => {\r\n  if (!userTheme) {\r\n    autoTheme();\r\n  } else {\r\n    getSunTimes();\r\n  }\r\n})();\r\n\r\n// Check if day or night every 15 mins. Sets theme in auto mode\r\nsetInterval(() => {\r\n  if (!userTheme) {\r\n    autoTheme();\r\n  }\r\n}, 1000 * 60 * 15);\r\n\r\n// Switch theme on toggle switch\r\nfunction switchTheme(e) {\r\n  document.querySelector('body').style.transition = 'background var(--transition-speed) linear';\r\n  if (e.target.checked) {\r\n    document.documentElement.setAttribute('data-theme', 'dark');\r\n    // localStorage.setItem('theme', 'dark');\r\n    document.cookie = 'theme=dark';\r\n  } else {\r\n    document.documentElement.setAttribute('data-theme', 'light');\r\n    // localStorage.setItem('theme', 'light');\r\n    document.cookie = 'theme=light';\r\n  }\r\n}\r\n\r\n// Reload with Register modal tab open if client-side validation fails\r\nif (sessionStorage.getItem('regformErrors') === 'true') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    authModal.show();\r\n    registerTab.show();\r\n  });\r\n}\r\n// Prevent reOpening registration form on reload\r\nsessionStorage.setItem('regformErrors', false);\r\n\r\n// If login fails open login modal\r\nif (sessionStorage.getItem('loginErrors') === 'true') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n// Prevent reOpening login form on reload\r\nsessionStorage.setItem('loginErrors', false);\r\n\r\n// Redirect to home directory on Authorization modal close if in subdirectories\r\nif (location.pathname != '/') {\r\n  document.querySelector('#auth-modal').addEventListener('hide.bs.modal', e => {\r\n    console.log('hida maida');\r\n    window.location.href = '/';\r\n  });\r\n}\r\n","console.log('connected 2.0_navbar.js');\r\n\r\n// Select language options\r\nconst langSelectors = document.querySelectorAll('#lang a');\r\n// Authorization\r\nconst authBtn = document.querySelector('#auth-btn');\r\n// Modals\r\nconst authModal = new bootstrap.Modal(document.getElementById('auth-modal'));\r\nconst registerTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#register-tab-page\"]'));\r\nconst loginTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#login-tab-page\"]'));\r\n// Links to Login and Register tabs in Modal Window\r\nconst regbutton = document.querySelector('#btn-register');\r\nconst loginbutton = document.querySelector('#btn-login');\r\nconst reglink = document.querySelector('#register-link');\r\nconst loginlink = document.querySelector('#login-link');\r\n// Register form password visibility toggle\r\nconst hideBtns = document.querySelectorAll('.toggle-hide');\r\n\r\n// Auth button event\r\nif (authBtn) {\r\n  authBtn.addEventListener('click', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n\r\n// Modal form links between Login and Register modals\r\nreglink.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  registerTab.show();\r\n});\r\nloginlink.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  loginTab.show();\r\n});\r\n\r\n// Toggle Password Visibility\r\nhideBtns.forEach(btn => {\r\n  btn.addEventListener('click', () => {\r\n    toggleShow(btn);\r\n  });\r\n});\r\n\r\nfunction toggleShow(element) {\r\n  if (element.previousElementSibling.type === 'password') {\r\n    element.previousElementSibling.type = 'text';\r\n    element.children[0].style.display = 'none';\r\n    element.children[1].style.display = 'block';\r\n  } else {\r\n    element.previousElementSibling.type = 'password';\r\n    element.children[0].style.display = 'block';\r\n    element.children[1].style.display = 'none';\r\n  }\r\n}\r\n\r\n// Day & Night theme toggle\r\nconst themeCheckbox = document.querySelector('.theme-checkbox');\r\n\r\nthemeCheckbox.addEventListener('change', () => {\r\n  // change theme of the website\r\n  document.body.classList.toggle('light');\r\n});\r\n\r\n// Select language dropdown\r\nconst langCookieAge = 365 * 24 * 60 * 60;\r\nlangSelectors.forEach(option => {\r\n  option.addEventListener('click', () => {\r\n    document.cookie = 'language=' + option.id + '; ' + 'max-age=' + langCookieAge + ';path=/';\r\n    location.reload();\r\n  });\r\n});\r\n","// Show movie information in Movie Column of Movie Megamenu\r\nconst showMegamenuMovie = movie => {\r\n  const movieCol = document.querySelector('.movie-column');\r\n  \r\n  movieCol.innerHTML = '';\r\n\r\n  if(!movie) {\r\n    main.innerHTML = `<div class=\"section-title\">Movie info not available<span class=\"section-backlogo\">Movie info not available</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, \r\n          poster_path,\r\n          vote_average, \r\n          overview,\r\n          release_date,\r\n          genre_ids,\r\n          id\r\n        } = movie;\r\n\r\n  const movieElement = document.createElement('div');\r\n  movieElement.classList.add('movieCol');\r\n\r\n  movieElement.innerHTML = `\r\n    \r\n      <div style=\"background-image: url('${img_path + poster_path}'); background-size: cover; height: 250px; width: 100px\"></div>\r\n        <div>\r\n          <h3>${title}</h3>\r\n            <span>${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe\">|</span> \r\n            <span class=\"${getClassByRate(vote_average).class}\">\r\n              ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <span class=\"pipe\">|</span> \r\n            <span>${getGenres(genre_ids)}</span>\r\n        </div>\r\n        \r\n        <p>${overview}</p>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // Attach button to an element for movie details \r\n  movieCol.appendChild(movieElement);\r\n  movieElement.addEventListener('click', function() {\r\n    fetchMovie(id);\r\n  });\r\n}","console.log('connected 4_body.js');\r\n\r\nconst secTheaters = document.querySelector('.intheaters');\r\nconst secTheatersPick = document.querySelector('.intheaters-pick');\r\nconst secMovies = document.querySelector('.moviespopular');\r\nconst secMoviesPick = document.querySelector('.moviespopular-pick');\r\nconst secTv = document.querySelector('.tvpopular');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == '/') {\r\n  document.addEventListener('DOMContentLoaded', initData());\r\n}\r\n\r\n// Collect initial TMDB data\r\nasync function initData() {\r\n  await showGenres();\r\n  showMoviesTrending();\r\n  showInTheaters();\r\n  showMoviesPopular();\r\n}\r\n\r\n// Collect genres list\r\nasync function showGenres() {\r\n  movieGenres = await fetchData(url_movie_genres + url_params, 24 * 60 * 60 * 1000);\r\n  document.querySelectorAll('.genres-list').forEach(list => {\r\n    toGenresList(movieGenres.genres, list);\r\n  });\r\n}\r\n\r\n// Display movies In theaters and a movie pick\r\nasync function showInTheaters() {\r\n  const moviesIntheaters = await fetchData(url_theatersNow + url_params).then(data => data.results);\r\n  const picked = await pickShow(moviesIntheaters);\r\n\r\n  toSection(secTheaters, moviesIntheaters);\r\n  toTheaterPicked(secTheatersPick, picked);\r\n}\r\n\r\n// Display Popular movies and a movie pick\r\nasync function showMoviesPopular() {\r\n  const movies = await fetchData(url_moviesPopular + url_params).then(data => data.results);\r\n  const picked = await pickShow(movies);\r\n  const similars = await getSimilarShows(picked.id, 0);\r\n\r\n  toSection(secMovies, movies);\r\n  const similarsBox = toMoviePicked(secMoviesPick, picked);\r\n  toSimilars(similarsBox, similars);\r\n}\r\n\r\n// Pick a show from array\r\nfunction pickShow(shows) {\r\n  const index = Math.floor(Math.random() * shows.length);\r\n  const show = shows[index];\r\n  return show;\r\n}\r\n\r\n// Fetch similar shows\r\nasync function getSimilarShows(id, type) {\r\n  // type 0:movie or 1:tv\r\n  type = type ? 'tv' : 'movie';\r\n  const url = url_similars + `${type}/${id}?`;\r\n  const similars = await fetchData(url + url_params).then(data => data.results.slice(0, 5));\r\n  return similars;\r\n}\r\n\r\n// Display Trending movies\r\nasync function showMoviesTrending() {\r\n  moviesTrending = await fetchData(url_moviesTrend + url_params);\r\n  toCarousel(moviesTrending);\r\n}\r\n\r\n// Populate Carousel\r\nfunction toCarousel(array) {\r\n  gallery.innerHTML = '';\r\n  galleryThumbnails.innerHTML = '';\r\n\r\n  array.results.forEach((item, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = item;\r\n\r\n    const filmSlide = document.createElement('div');\r\n    filmSlide.classList.add('carousel-item');\r\n    index === 0 ? (filmSlide.className += ' active') : '';\r\n    filmSlide.style.backgroundImage = `url(\"${img_path_highres + backdrop_path}\")`;\r\n\r\n    // Slides output\r\n    filmSlide.innerHTML = `\r\n      <div class=\"fade-overlay\"></div>\r\n      <div class=\"carousel-caption d-md-block\">\r\n      <!-- <div class=\"carousel-caption d-none d-md-block\"> -->\r\n        <h2 class=\"display-4\">${title}</h2>\r\n          <p class=\"lead overview-header__stats\">\r\n            <span class=\"carousel-caption-overview\">${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">\r\n              <i class=\"${vote_average == 0 ? '' : getClassByRate(vote_average).star}\"></i> ${\r\n      vote_average == 0 ? '' : vote_average\r\n    } </span>\r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">${showMovieListGenres(genre_ids)}</span>\r\n          </p>\r\n        <div class=\"film-details\">\r\n          <a class=\"button-container-${index}\" href=\"#\"></a>\r\n          <p class=\"lead\">${overview.substring(0, 200)}...</p>\r\n        </div>\r\n      </div>\r\n      `;\r\n\r\n    gallery.appendChild(filmSlide);\r\n\r\n    // Create a button and attach click event listener\r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-custom');\r\n    button.className += ' mb-3';\r\n    button.innerHTML = '<i class=\"fas fa-play\"></i> Play';\r\n    button.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n    // On each forEach iteration attach the button to an element with\r\n    // a unique id\r\n    document.querySelector('.button-container-' + index).appendChild(button);\r\n\r\n    // Icons output\r\n    const filmElement = document.createElement('li');\r\n    // index === 0 ? filmElement.className += \" active\" : '';\r\n    filmElement.setAttribute('data-target', '#carousel-main');\r\n    filmElement.setAttribute('data-slide-to', `${index}`);\r\n    filmElement.innerHTML = `\r\n      <div class=\"card-dummy\">\r\n        <img src=\"${img_path + poster_path}\">\r\n      </div>\r\n    `;\r\n    marqueeReel.appendChild(filmElement);\r\n  });\r\n\r\n  // Fill marquee space between last and first card\r\n  infiniteMarquee();\r\n}\r\n\r\n// Populate a section\r\nfunction toSection(section, movies) {\r\n  section.innerHTML = '';\r\n  if (movies.length < 1) {\r\n    // Inform user if no results\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  // Show movie-cards size toggle icons\r\n  section.innerHTML = `\r\n  <div class=\"section-row\">\r\n    <div class=\"section-title\">${section.getAttribute(\r\n      'data-desc'\r\n    )}<span class=\"section-backlogo\">${section.getAttribute('data-desc')}</span></div>\r\n    <div class=\"view-icons-container\">\r\n      <span class=\"view-icons btn-view-sm\">\r\n        <svg class=\"btn-view-sm\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid-3x2-gap\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-sm\" fill-rule=\"evenodd\" d=\"M4 4H2v2h2V4zm1 7V9a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 5V9a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 4H7v2h2V4zm5 0h-2v2h2V4zM4 9H2v2h2V9zm5 0H7v2h2V9zm5 0h-2v2h2V9zm-3-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V4zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1h-2z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"view-icons btn-view-lg\">\r\n        <svg class=\"btn-view-lg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-lg\" fill-rule=\"evenodd\" d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"/>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  movies.forEach((movie, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'movie';\r\n\r\n    movieElement.innerHTML = `      \r\n      <div class=\"img-container\">\r\n        <div class=\"img\" style=\"background-image: url('${img_path + poster_path}');\"></div>\r\n        <div class=\"overlay\"></div>\r\n      </div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span class=\"${getClassByRate(vote_average).class}\">\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overview-body\">\r\n           <!-- <p>${overview}</p> -->\r\n          </div>\r\n          <div class=\"overview-footer\">\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // On each forEach iteration attach a button to an element with a watch movie link\r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Pick a show from array\r\nfunction toTheaterPicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if (movie.length) {\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'pickedMovie';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-box parallax-box\">\r\n      <div class=\"info-box_block\">\r\n        <div class=\"picked-title\">\r\n          ${title} <span>(${new Date(release_date).getFullYear()})</span>\r\n        </div>\r\n        <div class=\"details-block\">\r\n          <div>\r\n            <img src=\"${img_path + poster_path}\" height=\"220\">\r\n          </div>\r\n          <div>\r\n            <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            <br>\r\n            <span class=\"picked-rating\">${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <br>\r\n            <p>${overview.substring(0, 150)}...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"map-box parallax-box\">\r\n      <div>${section.getAttribute('data-desc')}</div>\r\n      <div id=\"map\">MAP</div>\r\n      <div class=\"notes\">${section.getAttribute('data-desc-2')}</div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  const infoBox = movieElement.querySelector('.info-box');\r\n  infoBox.addEventListener('click', () => fetchMovie(id));\r\n\r\n  // Show map if coordinates available, if not, retry up to 10 times\r\n  let i = 0;\r\n  const showMap = () => {\r\n    if (!coordinates && i < 10) {\r\n      i++;\r\n      setTimeout(() => {\r\n        showMap();\r\n      }, 200);\r\n    } else {\r\n      initMap(coordinates);\r\n    }\r\n  };\r\n  showMap();\r\n}\r\n\r\n// Display picked popular movie and similars\r\nfunction toMoviePicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if (movie.length) {\r\n    // Inform user if no movie found\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'picked-movie-similars';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-box\">\r\n      ${section.getAttribute('data-desc')}<br>\r\n      <div class=\"picked-title\">${title} <span>(${new Date(release_date).getFullYear()})</span></div>\r\n      <span class=\"picked-rating\">\r\n        ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n      </span><br>\r\n      <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n    </div>\r\n    <div class=\"similars-box\">\r\n    </div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  const infoBox = movieElement.querySelector('.info-box');\r\n  infoBox.addEventListener('click', () => fetchMovie(id));\r\n  const similarsBox = movieElement.querySelector('.similars-box');\r\n  return similarsBox;\r\n}\r\n\r\n// Fill Similars section\r\nfunction toSimilars(section, movies) {\r\n  section.innerHTML = '';\r\n  movies.forEach((movie, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'similars-card';\r\n    movieElement.innerHTML = `\r\n      <div class=\"similars-bg\" style=\"background-image: url(${img_path + backdrop_path})\"></div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span>\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // On each forEach iteration attach the button to an element with\r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Populate Movie details\r\nasync function watchMovie(movie) {\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genres } = movie;\r\n\r\n  clearPage();\r\n  header.innerHTML = `\r\n    <!-- <div class=\"section-title\">Title<span class=\"section-backlogo\">Title</span></div> -->\r\n    <!-- <h1>Title</h1> -->\r\n\r\n    <section class=\"watch-movie\">\r\n      <div class=\"watch-movie-bg-decor\">${title}</div>\r\n      <div class=\"watch-movie-bg\"></div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-sm-12 padding-0\">\r\n            <div class=\"movie-glance\">\r\n              <div class=\"film-page_poster\">\r\n                <img class=\"img-fluid\" src=\"${img_path + poster_path}\" alt=\"${title}\" title=\"${title}\"> \r\n              </div>\r\n              <div class=\"movie-info-container\">\r\n                <div class=\"\">\r\n                  <div class=\"film-page_title\">${title}</div>\r\n                  <div class=\"film-page_title-stats\">\r\n                    <span>${new Date(release_date).getFullYear()}</span>\r\n                    <span>|</span>\r\n                    <span> R </span>\r\n                    <span>|</span>\r\n                    <span> 2hr 20min</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"film-page_rating\">\r\n                  <span class=\"rating-star\"><i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n                  <span class=\"rating-score ${getClassByRate(vote_average).class}\">${vote_average}</span>\r\n                  <span class=\"reviews\">87 875 <i class=\"fas fa-user-alt\"></i></span>\r\n                </div>\r\n                <div class=\"film-page_genre\">\r\n                  <span>${showMovieGenres(genres)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"movie-sources\">\r\n              <ul class=\"play-button-group\">\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">4K <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">HD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">SD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">IN THEATERS <i class=\"fas fa-film\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-lg-6 col-sm-12\">\r\n            <div class=\"movie-description\">\r\n              <p>${overview}</p>\r\n            </div>  \r\n          </div> \r\n        </div>\r\n        <div class=\"row\">\r\n        \r\n          <div class=\"iframe-container\">\r\n\r\n          </div>\r\n        \r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"suggest-movie\" style=\"height: 100px;\">\r\n      <div class=\"container\">\r\n        <div class=\"title\">\r\n          <h4>You Also May Like</h4>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  `;\r\n  window.scrollTo(0, 0);\r\n\r\n  const iframeContainer = document.querySelector('.iframe-container');\r\n  const trailer = elem.getAttribute(\"data-trailer\");  // get trailer phrase in set language\r\n\r\n  const yturl = `/api/youtube/trailers?`;\r\n  const params = new URLSearchParams({ q: `${title} ${new Date(release_date).getFullYear()} ${trailer}` });\r\n  const ytData = await fetchData(yturl + params).then(data => data.items);\r\n  const videoId = ytData[0].id.videoId;\r\n\r\n  iframeContainer.innerHTML = `\r\n    <iframe src=\"https://www.youtube.com/embed/${videoId}?autoplay=1&start=13&mute=1\" \r\n    allow=\"autoplay; picture-in-picture;\" frameborder=\"0\" allowfullscreen>\r\n    </iframe> \r\n  \r\n  `;\r\n}\r\n\r\n// Populate Genre lists\r\nfunction toGenresList(genres, list) {\r\n  list.innerHTML = '';\r\n\r\n  genres.forEach(genre => {\r\n    const { id, name } = genre;\r\n\r\n    const genreElement = document.createElement('li');\r\n    genreElement.classList.add('genre-li');\r\n\r\n    genreElement.innerHTML = `<a href=\"javascript:void(0)\">${name.length > 16 ? name.substring(0, 16) + '...' : name}</a>`;\r\n\r\n    // On each forEach iteration attach the button to an element with\r\n    list.appendChild(genreElement);\r\n    genreElement.addEventListener('click', async function () {\r\n      const params = new URLSearchParams({ language });\r\n      params.append('with_genres', id);\r\n      const url = `api/genres?`;\r\n      \r\n      const data = await fetch(url + params).then(res => res.json());\r\n      clearPage();\r\n      const searchSection = document.querySelector('.search-results');\r\n      toSection(searchSection, data.results);\r\n    });\r\n  });\r\n}\r\n\r\n// Click on view-icons for cards size\r\ndocument.addEventListener('click', e => {\r\n  if (e.target.classList == 'btn-view-sm') {\r\n    document.querySelector('.btn-view-sm').style.opacity = 1;\r\n    document.querySelector('.btn-view-lg').style.opacity = 0.6;\r\n    document.querySelectorAll('.movie').forEach(movie => {\r\n      movie.className = 'movie-small';\r\n    });\r\n  }\r\n  if (e.target.classList == 'btn-view-lg') {\r\n    document.querySelector('.btn-view-sm').style.opacity = 0.6;\r\n    document.querySelector('.btn-view-lg').style.opacity = 1;\r\n    document.querySelectorAll('.movie-small').forEach(movie => {\r\n      movie.className = 'movie';\r\n    });\r\n  }\r\n});\r\n\r\n// // event added to target if = #burger\r\n// document.addEventListener('click', function(e){\r\n//   if(e.target && e.target.id == 'burger'){\r\n//     console.log('listener attached to document');\r\n//    }\r\n// });\r\n\r\n// burger menu listener assigned to parent\r\n// document.querySelector(\"#burger\").click();\r\n\r\n//   // Show movie card in Megamenu\r\n//   const randMovie = Math.floor(Math.random() * 20);\r\n//   showMegamenuMovie(respData.results[randMovie]);\r\n\r\n// Loop search inputs for value\r\n// searchForms.forEach((form) => {\r\n//   form.addEventListener('submit', (e) => {\r\n//     let searchValue = form.querySelector('.search-input').value;\r\n//     e.preventDefault();\r\n\r\n//     if (searchValue) {\r\n//       main.innerHTML = '';\r\n//       document.querySelector('header').innerHTML = '';\r\n//       document.querySelector('#search-container-nav').style.visibility = 'unset';\r\n//       getMovies(search_url + searchValue);\r\n//       form.querySelector('.search-input').value = '';\r\n//     }\r\n//   });\r\n// });\r\n\r\n// function onhover() {\r\n//   console.log('hi');\r\n//   document.querySelector('.movie-info').className = 'movie-info-active';\r\n// }\r\n\r\n// function clickWatch(index) {\r\n//   document.addEventListener('click', function(e) {\r\n//     if(e.target && e.target.id == 'movie-link') {\r\n//       console.log('clicked from closure ', index);\r\n//     }\r\n//   });\r\n// }\r\n","console.log('connected 5_marquee.js');\r\n\r\nfunction infiniteMarquee() {\r\n  const root = document.documentElement;\r\n  const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue('--marquee-elements-displayed');\r\n  const marqueeContent = document.querySelector('.marquee-content');\r\n\r\n  root.style.setProperty(\"--marquee-elements\", marqueeContent.children.length);\r\n\r\n  for (let i = 0; i < marqueeElementsDisplayed; i++) {\r\n    marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));\r\n  }\r\n}","console.log('connected 6_forms.js');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == '/info/contact') {\r\n  document.addEventListener('DOMContentLoaded', contactForm());\r\n}\r\n\r\n// Contact form\r\nfunction contactForm() {\r\n  document.getElementById('contact-form').addEventListener('submit', async e => {\r\n    e.preventDefault();\r\n    const name = document.querySelector('#contact-form-name').value;\r\n    const email = document.querySelector('#contact-form-email').value;\r\n    const message = document.querySelector('#contact-form-message').value;\r\n\r\n    const res = await fetch('/info/contact', {\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify({ name, email, message }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    // if (data.success) {\r\n    //   console.log('successfully registered');\r\n    //   registrationErrors.recaptca = false;\r\n    //   return (window.location.href = '/');\r\n    // }\r\n  });\r\n}\r\n","console.log('connected 2.1_regvalidate.js');\r\n\r\n// Register form\r\nconst regform = document.querySelector('#reg-form');\r\nconst regemail = document.querySelector('#reg-email');\r\nconst regpassword = document.querySelector('#reg-password');\r\nconst regcaptcha = document.querySelector('#reg-form .g-recaptcha');\r\n// Registration email errors from backend validation\r\nconst emailsmall = document.querySelector('#reg-form .email-small');\r\nconst emailerr = document.querySelector('#reg-form .email-error');\r\nconst captchasmall = document.querySelector('#reg-form .captcha-small');\r\n// Login form\r\nconst loginForm = document.querySelector('#login-form');\r\nconst loginemail = document.querySelector('#login-email');\r\nconst loginCaptcha = document.querySelector('#login-form .g-recaptcha');\r\nconst loginBtn = document.querySelector('#btn-login');\r\n// Login errors display\r\nconst loginEmailsmall = document.querySelector('#login-form .email-small');\r\nconst loginCaptchasmall = document.querySelector('#login-form .captcha-small');\r\n\r\n// Registration form Monitor errors\r\nlet registrationErrors = {\r\n  emailbackend: true,\r\n  email: true,\r\n  password: true,\r\n  recaptcha: true\r\n};\r\n// Login form errors monitor\r\nlet loginErrors = {\r\n  email: true,\r\n};\r\n\r\n// Email field error set True on focus in\r\nregemail.addEventListener('focusin', () => {\r\n  registrationErrors.emailbackend = true;\r\n});\r\n\r\n// Form processing\r\ndocument.querySelectorAll('.auth-form').forEach(form => {\r\n  const loader = form.querySelector('.submit-loader');\r\n  const btn = form.querySelector('.auth-btn');\r\n  // On form submit action\r\n  form.addEventListener('submit', (e) => {\r\n    // Validate registration\r\n    if(form.id === 'reg-form') {\r\n      if(!allFalse(registrationErrors)) {\r\n        e.preventDefault();\r\n        validateEmail(regemail);\r\n        validatePassword();\r\n        validateCaptcha();\r\n        checkEmail();\r\n\r\n        console.log('reg-form validation');\r\n        console.log(registrationErrors);\r\n        console.log(allFalse(registrationErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // Validate login\r\n    if(form.id === 'login-form') {\r\n      validateEmail(loginemail);\r\n      if(!allFalse(loginErrors)) {\r\n        e.preventDefault();\r\n\r\n        console.log('login-form validation');\r\n        console.log(loginErrors);\r\n        console.log(allFalse(loginErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // On wait: disable button and show loader\r\n    btn.disabled = true;\r\n    btn.style.pointerEvents = \"none\"; \r\n    btn.style.opacity = 0.3;\r\n    loader.innerHTML = `\r\n      <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <path d=\"M10 50A40 40 0 0 0 90 50A40 43 0 0 1 10 50\" fill=\"#ececec\" stroke=\"none\">\r\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51.5;360 50 51.5\"></animateTransform>\r\n      </path>\r\n      <!-- [ldio] generated by https://loading.io/ --></svg>\r\n    `;\r\n  });\r\n});\r\n\r\n// Email presence in database validation \r\nregemail.addEventListener('focusout', () => {\r\n  checkEmail();\r\n});\r\n\r\n// Validate registration email\r\nregemail.addEventListener('keyup', (e) => {\r\n  validateEmail(regemail);\r\n});\r\n\r\n// Validate login email\r\nloginemail.addEventListener('focusout', (e) => {\r\n  validateEmail(loginemail);\r\n});\r\n\r\n// Validate password\r\nregpassword.addEventListener('keyup', (e) => {\r\n  validatePassword();\r\n});\r\n\r\n// Output message and style on Successful Validation\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector('.small');\r\n\r\n  // add error message inside small\r\n  small.innerText = message;\r\n\r\n  // add error class\r\n  formControl.className = 'form-group error';\r\n}\r\n\r\n// Output message and style on Error\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = 'form-group success';\r\n}\r\n\r\n// Validate email structure\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\n// Check database for Email presence\r\nfunction checkEmail() {\r\n  let email = document.querySelector('#reg-email').value.toLowerCase();\r\n  \r\n  // send email input value to /usercheck route of the API\r\n  fetch('/usercheck', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n  // receive and process response from the API\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data);\r\n    if(data.message != 'success'){\r\n      emailsmall.innerHTML = `${data.message}`;\r\n\r\n      const formControl = emailsmall.parentElement;\r\n      formControl.className = 'form-group error';\r\n      registrationErrors.emailbackend = true;\r\n    } else {\r\n      // emailerr.innerHTML = '';\r\n      registrationErrors.emailbackend = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Check if all errors cleared\r\nfunction allFalse(obj) {\r\n  for(let item in obj)\r\n    if(obj[item]) return false;\r\n    \r\n  return true;\r\n}\r\n\r\n// Validate Email\r\nfunction validateEmail(element) {\r\n  const emailValue = element.value;\r\n    \r\n  if(emailValue === '' || emailValue === null) {\r\n    setErrorFor(element, \"Email cannot be blank\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(emailValue.length <=6) {\r\n    setErrorFor(element, \"Email too short\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(!isEmail(emailValue)) {\r\n    setErrorFor(element, \"Email is not valid\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else {\r\n    setSuccessFor(element);\r\n    registrationErrors.email = false;\r\n    loginErrors.email = false;\r\n  } \r\n}\r\n\r\n// Validate Password\r\nfunction validatePassword() {\r\n  passValue = regpassword.value;\r\n  \r\n  if(passValue === '' || passValue === null) {\r\n    setErrorFor(regpassword, \"Password cannot be blank\");\r\n    registrationErrors.password = true;\r\n  } else if(passValue.length <= 6) {\r\n    setErrorFor(regpassword, \"Password must be 7+ characters\");\r\n    registrationErrors.password = true;\r\n  } else {\r\n    setSuccessFor(regpassword);\r\n    registrationErrors.password = false;\r\n  }\r\n}\r\n\r\n// Google reCaptcha validation\r\nfunction validateCaptcha() {\r\n  const captchaValue = regemail.value;\r\n    \r\n  if(registrationErrors.recaptcha != false) {\r\n    setErrorFor(regcaptcha, \"Are you human? Please check captcha\");\r\n  } else {\r\n    setSuccessFor(regcaptcha);\r\n  } \r\n}\r\nfunction recaptchaCheck() {\r\n  registrationErrors.recaptcha = false;\r\n  setSuccessFor(regcaptcha);\r\n}\r\nfunction recaptchaCheckExp() {\r\n  registrationErrors.recaptcha = true;\r\n  setErrorFor(regcaptcha, \"Are you human?\");\r\n}","console.log('connected 2.2_pwmeter.js');\r\n\r\ndocument.querySelector('#reg-password').addEventListener('keyup', function() {\r\n  const msg = document.getElementById('passwordmessage');\r\n  const meters = document.querySelectorAll('.pwmeter span');\r\n\r\n  // Calculate the strength of the password\r\n  let passwordScore = calPasswordStrength(this.value);\r\n\r\n  // Set the width of the password meter to a multiple of the score\r\n  // meter.style.width = (passwordScore+1) * 1 + 'px';\r\n\r\n  if (passwordScore <= 40) {\r\n    meters[0].style.backgroundColor = 'red';\r\n    meters[0].className = 'meter-span-on';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'coral';\r\n    msg.innerHTML = 'Weak password';\r\n  } else if (passwordScore <= 77) {\r\n    meters[1].style.backgroundColor = 'orange';\r\n    meters[1].className = 'meter-span-on';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'orange';\r\n    msg.innerHTML = 'Password is average';\r\n  } else {\r\n    meters[2].style.backgroundColor = 'green';\r\n    meters[2].className = 'meter-span-on';\r\n    msg.style.color = 'green';\r\n    msg.innerHTML = 'Your password is strong';\r\n  }\r\n\r\n  // If input empty, there is no text output\r\n  if (this.value == \"\") {\r\n    meters[0].className = 'meter-span-off';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.innerHTML = '';\r\n  }\r\n});\r\n\r\n// Return password score\r\nfunction calPasswordStrength(pass) {\r\n  var score = 0;\r\n  if (!pass) return score;\r\n\r\n  // award every unique letter until 5 repetitions\r\n  var letters = new Object();\r\n  for (var i=0; i<pass.length; i++) {\r\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n    score += 5.0 / letters[pass[i]];\r\n  }\r\n\r\n  // bonus points for mixing it up\r\n  var variations = {\r\n    digits: /\\d/.test(pass),\r\n    lower: /[a-z]/.test(pass),\r\n    upper: /[A-Z]/.test(pass),\r\n    nonWords: /\\W/.test(pass),\r\n  }\r\n\r\n  variationCount = 0;\r\n  for (var check in variations) {\r\n    variationCount += (variations[check] == true) ? 1 : 0;\r\n  }\r\n  score += (variationCount - 1) * 10;\r\n\r\n  return parseInt(score);\r\n}","console.log('connected 4.5_profile.js');\r\n\r\nconst url_weatherInfo = `/api/weather?`;\r\nconst weather = document.querySelector('.weather-data');\r\nconst clientInfo = document.querySelector('.client-data');\r\n\r\n// Check if in Profiles page\r\nif (window.location.href.indexOf('/profile/') != -1) {\r\n  document.addEventListener('DOMContentLoaded', profileInit());\r\n}\r\n\r\n// Init Profiles page\r\nasync function profileInit() {\r\n  const ipdata = await sessionIpData('https://freegeoip.app/json/');\r\n  showWeather(ipdata);\r\n  showClientside(ipdata);\r\n}\r\n\r\n// Display Weather info\r\nasync function showWeather(data) {\r\n  if (weather) {\r\n    const params = new URLSearchParams({\r\n      lat: data.latitude,\r\n      lon: data.longitude,\r\n      units: 'metric', // \"metric\", \"imperial\", \"kelvin\"\r\n      lang: language,\r\n    });\r\n    const resdata = await fetchData(url_weatherInfo + params);\r\n    toWeather(resdata);\r\n  }\r\n}\r\n\r\n// Display Clientside info\r\nasync function showClientside(data) {\r\n  if (clientInfo) {\r\n    let browser_geolocation = false;\r\n\r\n    if (true) {\r\n    } else {\r\n    }\r\n\r\n    toClientInfo(data);\r\n\r\n    // console.log('received weather data: ', \"resdata\");\r\n  }\r\n}\r\n\r\nfunction toWeather(data) {\r\n  if (data.length < 1) {\r\n    weather.innerHTML = '';\r\n    weather.innerHTML = `<div>No Weather Data</div>`;\r\n    return;\r\n  }\r\n  weather.innerHTML = '';\r\n  weather.innerHTML = `<div><strong>Weather Info with OpenWeatherMap:</strong></div>`;\r\n\r\n  const lang = data.locale;\r\n  const city = data.name;\r\n  const temp = data.main.temp;\r\n  const icon = data.weather[0].icon;\r\n  const desc = data.weather[0].description;\r\n\r\n  const weatherElement = document.createElement('div');\r\n  weatherElement.classList.add('weather');\r\n  weatherElement.innerHTML = `\r\n    ${lang.city}: ${city}<br>\r\n    ${lang.temp}: ${temp} &deg;C <br>\r\n    ${desc}<br>\r\n    <img class=\"weather-icon\" src=\"http://openweathermap.org/img/wn/${icon}@2x.png\"> <br>\r\n  `;\r\n\r\n  // On each forEach iteration attach the button to an element with\r\n  weather.appendChild(weatherElement);\r\n  weatherElement.addEventListener('click', function () {\r\n    // fetchMovie(id);\r\n  });\r\n}\r\n\r\n// Display ClienInfo\r\nfunction toClientInfo(data) {\r\n  const spans = document.querySelectorAll('.client-data span');\r\n  spans[0].innerHTML = data.ip;\r\n  spans[1].innerHTML = data.latitude;\r\n  spans[2].innerHTML = data.longitude;\r\n  spans[3].innerHTML = data.city;\r\n  spans[4].innerHTML = data.country_name;\r\n  spans[5].innerHTML = data.time_zone;\r\n}\r\n","console.log('gmap.js');\r\n\r\nlet map;\r\nlet marker;\r\nlet activeInfoWindow;\r\nlet myLatLng;\r\nlet directionsService;\r\nlet directionsRenderer;\r\n\r\nasync function initMap(coords) {\r\n  myLatLng = { lat: coords.lat, lng: coords.lon };\r\n\r\n  // Set map theme and marker depending on site theme\r\n  const style = toggleSwitch.checked ? styles.night : styles.retro;\r\n  const iconUrl = toggleSwitch.checked ? '/img/marker-light.png' : '/img/marker-dark.png';\r\n\r\n  // Fetch nearby movie theater locations\r\n  const url = '/api/places?';\r\n  const params = new URLSearchParams({ language });\r\n  params.append('location', `${coords.lat},${coords.lon}`);\r\n  params.append('radius', '2500');\r\n  params.append('type', 'movie_theater');\r\n  const theaters = await fetchData(url + params);\r\n\r\n  // Activate direction services\r\n  directionsService = new google.maps.DirectionsService();\r\n  directionsRenderer = new google.maps.DirectionsRenderer();\r\n\r\n  // Draw map\r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    center: myLatLng,\r\n    zoom: 13,\r\n    disableDefaultUI: true,\r\n    styles: style,\r\n  });\r\n  directionsRenderer.setMap(map);\r\n\r\n  // Place current position marker\r\n  marker = new google.maps.Marker({\r\n    position: myLatLng,\r\n    map,\r\n    animation: google.maps.Animation.DROP,\r\n    title: 'Your data shows you are here!',\r\n    icon: {\r\n      url: iconUrl,\r\n      scaledSize: new google.maps.Size(40, 40),\r\n    },\r\n  });\r\n  marker.addListener('mouseover', toggleBounce);\r\n  marker.addListener('mouseout', toggleBounce);\r\n\r\n  // Add marker for each movie theater\r\n  theaters.forEach(theater => {\r\n    addMarker(theater);\r\n  });\r\n\r\n  // Change map theme and marker on theme toggle\r\n  google.maps.event.addDomListener(toggleSwitch, 'change', function(e) {\r\n    if (e.target.checked) {\r\n      map.setOptions({ styles: styles.night });\r\n      marker.setOptions({ icon: { \r\n          url: '/img/marker-light.png',\r\n          scaledSize: new google.maps.Size(40, 40) },\r\n      });\r\n    } else {\r\n      map.setOptions({\r\n        styles: styles.retro,\r\n      });\r\n      marker.setOptions({ icon: { \r\n          url: '/img/marker-dark.png',\r\n          scaledSize: new google.maps.Size(40, 40) },\r\n      });\r\n      // marker.setIcon('/img/marker-dark.png'),\r\n    }\r\n  });\r\n}\r\n\r\nfunction toggleBounce() {\r\n  if (marker.getAnimation() !== null) {\r\n    marker.setAnimation(null);\r\n  } else {\r\n    marker.setAnimation(google.maps.Animation.BOUNCE);\r\n  }\r\n}\r\n\r\n// Add theaters and infowindows\r\nfunction addMarker(place) {\r\n  let marker = new google.maps.Marker({\r\n    position: place.geometry.location,\r\n    map: map,\r\n    icon: {\r\n      url: place.icon,\r\n      scaledSize: new google.maps.Size(20, 20),\r\n    },\r\n    title: place.name,\r\n  });\r\n\r\n  // Infowindow content\r\n  const contentString = `\r\n    <div><h3>${place.name}</h3></div>\r\n    <div>🚩 ${place.vicinity}</div>\r\n    <div>⭐ ${place.rating} (${place.user_ratings_total})</div><br>\r\n    <div><button id=\"router-btn\" class=\"btn-custom\">Route</button></div>\r\n  `;\r\n\r\n  const infowindow = new google.maps.InfoWindow({\r\n    content: contentString,\r\n  });\r\n\r\n  // Click on button in Infowindow to display route\r\n  google.maps.event.addListener(infowindow, 'domready', () => {\r\n\t  const routerBtn = document.getElementById('router-btn');\r\n    routerBtn.addEventListener('click', () => {\r\n      calculateAndDisplayRoute(directionsService, directionsRenderer, place.geometry.location)\r\n\t\t});\r\n  });\r\n  \r\n  // Open Infowindow on click\r\n  marker.addListener('click', () => {\r\n    if (activeInfoWindow) { activeInfoWindow.close();}\r\n    infowindow.open(map, marker);\r\n    activeInfoWindow = infowindow;\r\n  });\r\n}\r\n\r\n// Display route\r\nfunction calculateAndDisplayRoute(directionsService, directionsRenderer, endCoords) {\r\n  if (activeInfoWindow) { activeInfoWindow.close();}\r\n  directionsService.route(\r\n    {\r\n      origin: myLatLng,\r\n      destination: endCoords,\r\n      avoidTolls: true,\r\n      avoidHighways: false,\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    }, (response, status) => {\r\n      if (status === \"OK\") {\r\n        directionsRenderer.setDirections(response);\r\n      } else {\r\n        window.alert(\"Directions request failed due to \" + status);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n// Map styles\r\nconst styles = {\r\n  default: [\r\n    { icon: 'purple' },\r\n  ],\r\n  night: [\r\n    { icon: 'orangered' },\r\n    { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n    { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n    { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n    {\r\n      featureType: \"administrative.locality\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#263c3f\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#6b9a76\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#38414e\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#212a37\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#9ca5b3\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#746855\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#1f2835\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#f3d19c\" }],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#2f3948\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.station\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#17263c\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#515c6d\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [{ color: \"#17263c\" }],\r\n    },\r\n  ],\r\n  retro: [\r\n    { icon: 'purple' },\r\n    { elementType: \"geometry\", stylers: [{ color: \"#ebe3cd\" }] },\r\n    { elementType: \"labels.text.fill\", stylers: [{ color: \"#523735\" }] },\r\n    { elementType: \"labels.text.stroke\", stylers: [{ color: \"#f5f1e6\" }] },\r\n    {\r\n      featureType: \"administrative\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#c9b2a6\" }],\r\n    },\r\n    {\r\n      featureType: \"administrative.land_parcel\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#dcd2be\" }],\r\n    },\r\n    {\r\n      featureType: \"administrative.land_parcel\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#ae9e90\" }],\r\n    },\r\n    {\r\n      featureType: \"landscape.natural\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#dfd2ae\" }],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#dfd2ae\" }],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#93817c\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [{ color: \"#a5b076\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#447530\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#f5f1e6\" }],\r\n    },\r\n    {\r\n      featureType: \"road.arterial\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#fdfcf8\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#f8c967\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#e9bc62\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway.controlled_access\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#e98d58\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway.controlled_access\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#db8555\" }],\r\n    },\r\n    {\r\n      featureType: \"road.local\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#806b63\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.line\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#dfd2ae\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.line\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#8f7d77\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.line\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [{ color: \"#ebe3cd\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.station\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#dfd2ae\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [{ color: \"#b9d3c2\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#92998d\" }],\r\n    },\r\n  ],\r\n  hiding: [\r\n    {\r\n      featureType: \"poi.business\",\r\n      stylers: [{ visibility: \"off\" }],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"labels.icon\",\r\n      stylers: [{ visibility: \"off\" }],\r\n    },\r\n  ],\r\n};"]}